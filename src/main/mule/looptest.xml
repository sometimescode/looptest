<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:bti="http://www.mulesoft.org/schema/mule/ee/bti" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/bti http://www.mulesoft.org/schema/mule/ee/bti/current/mule-bti-ee.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="a153e21c-f460-4586-b8a3-537b06235031" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="f5e9fc01-ee30-4e8c-9768-2e64a4cefddf" >
		<db:my-sql-connection host="127.0.0.1" port="3306" user="root" password="password" database="mule_Test"/>
	</db:config>
	<db:config name="Database_Config1" doc:name="Database Config" doc:id="ed828ec4-448f-4b69-bc36-b47c24cc6ff1" >
		<db:my-sql-connection host="127.0.0.1" port="#[vars.portNum]" user="root" password="password" database="mule_test" useXaTransactions="true"/>
	</db:config>
	<db:config name="Port3307" doc:name="Database Config" doc:id="ecd0cad3-b531-4186-a728-7226142b5b78" >
		<db:my-sql-connection host="127.0.0.1" port="3307" user="root" password="password" database="mule_test" useXaTransactions="true"/>
	</db:config>
	<db:config name="Port3308" doc:name="Database Config" doc:id="5f73f829-82fa-40f6-b848-7641b822c490" >
		<db:my-sql-connection host="127.0.0.1" port="3308" user="root" password="password" database="mule_test" useXaTransactions="true"/>
	</db:config>
	<db:config name="Port3306" doc:name="Database Config" doc:id="a2671c4c-6b0d-49e9-8105-b6123982986e" >
		<db:my-sql-connection host="127.0.0.1" port="3306" user="root" password="password" database="mule_test" useXaTransactions="true"/>
	</db:config>
	<bti:transaction-manager doc:name="Bitronix Transaction Manager" doc:id="aa195f41-cd5d-438c-aa75-e8c7f0520f70" />
	<flow name="looptestFlow" doc:id="30e16f8a-2548-4df0-ac5b-4ec18fbe66c1" >
		<http:listener doc:name="Listener" doc:id="e664ed14-deae-45b0-a9da-f4520fe876d5" path="/loopdb" config-ref="HTTP_Listener_config"/>
		<!-- [STUDIO:"Try (Different DB)"]				<try doc:name="Try (Different DB)" doc:id="9db1fd93-1e0a-43e6-9586-df8c090ac0de" transactionalAction="ALWAYS_BEGIN" transactionType="XA">
			<db:stored-procedure doc:name="Stored procedure" doc:id="92d1d911-f59a-4f08-b8b7-7fcba7ef5203" config-ref="Port3306" transactionalAction="ALWAYS_JOIN">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "777"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
						<db:stored-procedure doc:name="Stored procedure" doc:id="fd85e98d-7cbe-471a-8997-479d8ff8d7ae" config-ref="Port3307" transactionalAction="ALWAYS_JOIN">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "777"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
						<db:stored-procedure doc:name="Stored procedure" doc:id="6b33c9f2-5099-4be4-8325-00acb2f2cf93" config-ref="Port3308" transactionalAction="ALWAYS_JOIN">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "777"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
		</try> [STUDIO] -->
<!-- [STUDIO:"Try (Same DB)"]		<try doc:name="Try (Same DB)" doc:id="fe642cbc-345d-4a3b-b2c1-d90afac63d0a" transactionalAction="BEGIN_OR_JOIN">
			<db:stored-procedure doc:name="Stored procedure" doc:id="742c95b1-d860-4deb-9d3e-d9829420ee09" config-ref="Database_Config" transactionalAction="ALWAYS_JOIN">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "123"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
			<db:stored-procedure doc:name="Stored procedure" doc:id="4e6db637-a1d8-4b96-a031-f6d95cde12c2" config-ref="Database_Config" transactionalAction="ALWAYS_JOIN">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "456"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
			<db:stored-procedure doc:name="Stored procedure" doc:id="26138f34-aa45-4302-8ba2-58b588bf90c7" config-ref="Database_Config">
				<db:sql ><![CDATA[CALL insertVal(:branch_cd);&#93;&#93;></db:sql>
				<db:input-parameters ><![CDATA[#[{
	branch_cd : "789"
}&#93;&#93;&#93;></db:input-parameters>
			</db:stored-procedure>
			<logger level="INFO" doc:name="Logger" doc:id="ac013cf0-cfa1-4a68-b949-4b1e0fcdb3c7" message="the payload: #[payload&#93;"/>
		</try> [STUDIO] -->
		<try doc:name="Try" doc:id="0254d72c-ee65-44f7-9ea8-81888e59329a" transactionalAction="ALWAYS_BEGIN" transactionType="XA">
			<foreach doc:name="For Each" doc:id="fbcb282d-1b4b-4dc3-be22-2aedd5ae1701" collection='#[["3306", "3307", "3308"]]'>
			<set-variable value="#[payload]" doc:name="Set Variable" doc:id="5cd3580f-8956-4183-99ba-4aeec63f0ebf" variableName="portNum" />
			<logger level="INFO" doc:name="Logger" doc:id="bd6b75bc-33d3-433b-9c67-0a921c89131b" message="value of var test = #[vars.portNum] and the branch cd is #" />
			<db:stored-procedure doc:name="Stored procedure (insert) Rollback Test (different db instances)" doc:id="2fcbd0a9-24b9-4105-91f9-c543e9e9f596" config-ref="Database_Config1" transactionalAction="ALWAYS_JOIN">
					<db:sql><![CDATA[CALL insertVal(:branch_cd);]]></db:sql>
					<db:input-parameters><![CDATA[#[%dw 2.0
output application/json
var flag = true
var branchCd = if(vars.portNum == "3308" and flag) "666" else vars.portNum ++ "1" 
---
{
	branch_cd : branchCd
}]]]></db:input-parameters>
				</db:stored-procedure>
<!-- [STUDIO:"Stored procedure (simple get)"]										<db:stored-procedure doc:name="Stored procedure (simple get)" doc:id="898e20c1-e50d-45b9-8249-6003049ce170" config-ref="Database_Config1">
				<db:sql><![CDATA[CALL getTobA(:branch_cd, :v_db_id);&#93;&#93;></db:sql>
				<db:input-parameters><![CDATA[#[{
	branch_cd : vars.portNum
}&#93;&#93;&#93;></db:input-parameters>
				<db:in-out-parameters />
				<db:output-parameters>
					<db:output-parameter key="v_db_id" type="INTEGER" />
				</db:output-parameters>
			</db:stored-procedure> [STUDIO] -->
			<logger level="INFO" doc:name="Logger" doc:id="2a7978e8-56c5-417c-aadd-14c51a34f1c0" message="final value of payload : #[payload]" />
			</foreach>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="17b710a1-c7e8-40b2-a75a-0fd976da8c20" >
					<logger level="INFO" doc:name="Logger" doc:id="85feb6ef-a5fb-4bc8-879b-ea244fb9a418" message="erra"/>
				</on-error-propagate>
			</error-handler>
		
</try>
<!-- [STUDIO:"Logger"]		<logger level="INFO" doc:name="Logger" doc:id="ccc73c11-aa3a-4a92-a0ed-b83866f6fa22" message="portNum before trying : #[vars.portNum&#93;"/> [STUDIO] -->
<!-- [STUDIO:"Try"]		<try doc:name="Try" doc:id="b6d9bb6a-2ff9-4bb7-8a94-d30e4fc9a302" >
			<db:stored-procedure doc:name="Stored procedure" doc:id="952cabcd-28c0-448a-b095-dbcd090182f4" config-ref="Database_Config1">
				<db:sql><![CDATA[CALL getTobA(:branch_cd, :v_db_id);&#93;&#93;></db:sql>
				<db:input-parameters><![CDATA[#[{
	branch_cd : vars.portNum
}&#93;&#93;&#93;></db:input-parameters>
				<db:output-parameters>
					<db:output-parameter key="v_db_id" type="INTEGER" />
				</db:output-parameters>
			</db:stored-procedure>
			<logger level="INFO" doc:name="Logger" doc:id="71379a2a-811f-492b-84b5-36b2abf8e7a7" message="here's the info: #[payload&#93;" />
		</try> [STUDIO] -->
		<ee:transform doc:name="Transform Message" doc:id="b799167f-b3be-4586-a68d-eb800697f166" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
